# MongoDB(R) is a relational open source NoSQL database. Easy to use, 
# it stores data in JSON-like documents. Automated scalability and high-performance. 
# Ideal for developing cloud native applications.
# 
# https://artifacthub.io/packages/helm/bitnami/mongodb
# https://github.com/bitnami/charts/tree/main/bitnami/mongodb
#
# Read the following architecture options to understand the deployment type
# https://docs.bitnami.com/kubernetes/infrastructure/mongodb/get-started/understand-architecture/
#
# This deployment makes use of the Standalone single architecture
#
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mongodb
  namespace: argocd
spec:
  destination:
    namespace: mongodb
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: mongodb
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 13.6.6 # Chart version 13.6.6, Mongo version 6.0.4
    helm:
      parameters:
      - name: commonLabels
        value: {
          "app": "mongodb"
        }
      - name: global.storageClass # Use persistent volumes
        value: "rook-ceph-block" # This matches the Storage Class created with rook-ceph
      - name: architecture # MongoDB(®) architecture (standalone or replicaset)
        value: standalone
      - name: nodeSelector # Deploy pods only to node-class:mongo nodes
        value: {
          "node-class": "mongo" 
        }
      - name: tolerations # Tolerate pods to only-mongo=true:NoSchedule tainted nodes
        value: [
          "only-mongo=true:NoSchedule"
        ]
      - name: persistence.enabled # Enable MongoDB(®) data persistence using PVC
        value: true
      - name: persistence.mountPath # Path to mount the volume at
        value: "/mongodb"
      - name: persistence.size # PVC Storage Request for MongoDB(®) data volume
        value: 8Gi
      - name: metrics.enabled # Enable using a sidecar Prometheus exporter, default is false
        value: true # Visit https://artifacthub.io/packages/helm/bitnami/mongodb#metrics-parameters for more
      - name: auth.enabled	
        value: true
      - name: auth.existingSecret # Existing secret with MongoDB(®) credentials (keys: mongodb-passwords, mongodb-root-password, mongodb-metrics-password, mongodb-replica-set-key)
        value: mongodb-secret
      - name: tls.enabled # Enable MongoDB(®) TLS support between nodes in the cluster as well as between mongo clients and nodes
        value: true
      - name: tls.autoGenerated # Generate a custom CA and self-signed certificates
        value: true
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
