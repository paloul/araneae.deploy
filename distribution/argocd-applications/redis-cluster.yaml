# Installs the Redis Cluster Helm chart from Bitnami. 
# This installed the cluster mode of Redis. If you want the
# single master version look at redis.yaml.
# Two key points with Redis Cluster
# 1. Supports only one database. Better if you have a big dataset
# 2. Multiple write points (multiple masters)
# https://artifacthub.io/packages/helm/bitnami/redis-cluster
# https://github.com/bitnami/charts/tree/master/bitnami/redis-cluster
#
# Look below at cluster.nodes and cluster.replices. This definition will
# create a cluster with 3 masters each with 1 replica.
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: redis-cluster
  namespace: argocd
spec:
  destination:
    namespace: redis
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: redis-cluster
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 7.0.9 # Chart version 7.0.9, Redis version 6.2.6
    helm:
      parameters:
      - name: commonLabels
        value: {
          "app": "redis-cluster"
        }
      - name: persistence.enabled
        value: "true"
      - name: persistence.path
        value: "/redis/data"
      - name: persistence.accessModes
        value: ["ReadWriteOnce"]
      - name: persistence.size
        value: "2Gi"
      - name: persistence.storageClass
        value: "rook-ceph-block" # This matches the Storage Class created with rook-ceph
      - name: cluster.nodes
        value: 3 # The number of master nodes. Should always be >= 3
      - name: cluster.replicas
        value: 1 # Number of replicas for every master in the cluster
      - name: cluster.externalAccess.enabled
        value: "false"
      - name: nodeSelector.node-class
        value: cache
      - name: redis.tolerations[0].only-cache
        value: "true:NoSchedule"
      - name: redis.affinity
        value: {
          # Pod Anti Affinity will try to avoid putting pods that have labels defined here
          # This definition will try and avoid co-locating pods on the same node
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis-cluster
              topologyKey: "kubernetes.io/hostname"
        }
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
