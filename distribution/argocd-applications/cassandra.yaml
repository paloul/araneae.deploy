# Installs the Cassandra Helm chart from Bitnami. 
# Cassandra is a free and open-source distributed database 
# management system designed to handle large amounts of 
# data across many commodity servers or datacenters.
# 
# https://artifacthub.io/packages/helm/bitnami/cassandra
# https://github.com/bitnami/charts/tree/master/bitnami/cassandra
# https://github.com/bitnami/bitnami-docker-cassandra
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cassandra
  namespace: argocd
spec:
  destination:
    namespace: redis
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: cassandra
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 9.0.4 # Chart version 9.0.4, Redis version 4.0.1
    helm:
      parameters:
      - name: commonLabels
        value: {
          "app": "cassandra"
        }
      - name: global.storageClass
        value: "rook-ceph-block" # This matches the Storage Class created with rook-ceph
      - name: nodeSelector
        value: {
          "node-class": "cassandra"
        }
      - name: tolerations
        value: [
          "only-cassandra=true:NoSchedule"
        ]
      - name: affinity
        value: {
          # Pod Anti Affinity will try to avoid putting pods that have labels defined here
          # This definition will try and avoid co-locating pods on the same node
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cassandra
              topologyKey: "kubernetes.io/hostname"
        }
      - name: persistence.enabled
        value: true
      - name: persistent.storageClass
        value: "rook-ceph-block" # This matches the Storage Class created with rook-ceph
      - name: persistent.commitStorageClass
        value: "rook-ceph-block" # This matches the Storage Class created with rook-ceph
      - name: persistent.size
        value: 8Gi
      - name: persistent.accessModes
        value: ["ReadWriteOnce"]
      - name: tls.internodeEncryption # Set internode encryption, Available values are none, all, dc or rack
        value: all
      - name: tls.clientEncryption # Set client-server encryption
        value: true
      - name: tls.autoGenerated # Generate automatically self-signed TLS certificates. Currently only supports PEM certificates
        value: true
      - name: cluster.seedCount
        value: 3 # Have three nodes as seed nodes across all AZs used
      - name: replicaCount
        value: 1 # Replica count can be just 1, as the underlying PV with Rook-Ceph is already redundant
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
